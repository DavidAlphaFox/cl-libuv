;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 2.0.11
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(in-package :libuv)



(cl:defconstant #.(lispify "AF_UNSPEC" 'constant) 0)

(cl:defconstant #.(lispify "AF_UNIX" 'constant) 1)

(cl:defconstant #.(lispify "AF_INET" 'constant) 2)

(cl:defconstant #.(lispify "AF_INET6" 'constant) 23)

(cl:defconstant #.(lispify "SOCK_STREAM" 'constant) 1)

(cl:defconstant #.(lispify "IPPROTO_TCP" 'constant) 6)

(cffi:defcstruct #.(lispify "addrinfo" 'classname)
	(#.(lispify "ai_flags" 'slotname) :int)
	(#.(lispify "ai_family" 'slotname) :int)
	(#.(lispify "ai_socktype" 'slotname) :int)
	(#.(lispify "ai_protocol" 'slotname) :int)
	(#.(lispify "ai_addrlen" 'slotname) :unsigned-long)
	(#.(lispify "ai_addr" 'slotname) :pointer)
	(#.(lispify "ai_canonname" 'slotname) :string)
	(#.(lispify "ai_next" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "sockaddr_in" 'classname)
	(#.(lispify "sin_family" 'slotname) :short)
	(#.(lispify "sin_port" 'slotname) :unsigned-short)
	(#.(lispify "sin_addr" 'slotname) :unsigned-int)
	(#.(lispify "sin_zero_0" 'slotname) :char)
	(#.(lispify "sin_zero_1" 'slotname) :char)
	(#.(lispify "sin_zero_2" 'slotname) :char)
	(#.(lispify "sin_zero_3" 'slotname) :char)
	(#.(lispify "sin_zero_4" 'slotname) :char)
	(#.(lispify "sin_zero_5" 'slotname) :char)
	(#.(lispify "sin_zero_6" 'slotname) :char)
	(#.(lispify "sin_zero_7" 'slotname) :char))

(cffi:defcstruct #.(lispify "sockaddr_in6" 'classname)
	(#.(lispify "sin6_family" 'slotname) :unsigned-short)
	(#.(lispify "sin6_port" 'slotname) :unsigned-short)
	(#.(lispify "sin6_flowinfo" 'slotname) :unsigned-int)
	(#.(lispify "sin6_addr_0" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_1" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_2" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_3" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_4" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_5" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_6" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_7" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_8" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_9" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_10" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_11" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_12" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_13" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_14" 'slotname) :unsigned-char)
	(#.(lispify "sin6_addr_15" 'slotname) :unsigned-char)
	(#.(lispify "sin6_scope_id" 'slotname) :unsigned-int))

(cl:defconstant #.(lispify "SPLAY_NEGINF" 'constant) -1)

(cl:defconstant #.(lispify "SPLAY_INF" 'constant) 1)

(cl:defconstant #.(lispify "RB_BLACK" 'constant) 0)

(cl:defconstant #.(lispify "RB_RED" 'constant) 1)

(cl:defconstant #.(lispify "RB_NEGINF" 'constant) -1)

(cl:defconstant #.(lispify "RB_INF" 'constant) 1)

(cl:defconstant #.(lispify "UV__EOF" 'constant) -4095)

(cl:defconstant #.(lispify "UV__UNKNOWN" 'constant) -4094)

(cl:defconstant #.(lispify "UV__EAI_ADDRFAMILY" 'constant) -3000)

(cl:defconstant #.(lispify "UV__EAI_AGAIN" 'constant) -3001)

(cl:defconstant #.(lispify "UV__EAI_BADFLAGS" 'constant) -3002)

(cl:defconstant #.(lispify "UV__EAI_CANCELED" 'constant) -3003)

(cl:defconstant #.(lispify "UV__EAI_FAIL" 'constant) -3004)

(cl:defconstant #.(lispify "UV__EAI_FAMILY" 'constant) -3005)

(cl:defconstant #.(lispify "UV__EAI_MEMORY" 'constant) -3006)

(cl:defconstant #.(lispify "UV__EAI_NODATA" 'constant) -3007)

(cl:defconstant #.(lispify "UV__EAI_NONAME" 'constant) -3008)

(cl:defconstant #.(lispify "UV__EAI_OVERFLOW" 'constant) -3009)

(cl:defconstant #.(lispify "UV__EAI_SERVICE" 'constant) -3010)

(cl:defconstant #.(lispify "UV__EAI_SOCKTYPE" 'constant) -3011)

(cl:defconstant #.(lispify "UV__EAI_BADHINTS" 'constant) -3013)

(cl:defconstant #.(lispify "UV__EAI_PROTOCOL" 'constant) -3014)

(cl:defconstant #.(lispify "UV__E2BIG" 'constant) -4093)

(cl:defconstant #.(lispify "UV__EACCES" 'constant) -4092)

(cl:defconstant #.(lispify "UV__EADDRINUSE" 'constant) -4091)

(cl:defconstant #.(lispify "UV__EADDRNOTAVAIL" 'constant) -4090)

(cl:defconstant #.(lispify "UV__EAFNOSUPPORT" 'constant) -4089)

(cl:defconstant #.(lispify "UV__EAGAIN" 'constant) -4088)

(cl:defconstant #.(lispify "UV__EALREADY" 'constant) -4084)

(cl:defconstant #.(lispify "UV__EBADF" 'constant) -4083)

(cl:defconstant #.(lispify "UV__EBUSY" 'constant) -4082)

(cl:defconstant #.(lispify "UV__ECANCELED" 'constant) -4081)

(cl:defconstant #.(lispify "UV__ECHARSET" 'constant) -4080)

(cl:defconstant #.(lispify "UV__ECONNABORTED" 'constant) -4079)

(cl:defconstant #.(lispify "UV__ECONNREFUSED" 'constant) -4078)

(cl:defconstant #.(lispify "UV__ECONNRESET" 'constant) -4077)

(cl:defconstant #.(lispify "UV__EDESTADDRREQ" 'constant) -4076)

(cl:defconstant #.(lispify "UV__EEXIST" 'constant) -4075)

(cl:defconstant #.(lispify "UV__EFAULT" 'constant) -4074)

(cl:defconstant #.(lispify "UV__EHOSTUNREACH" 'constant) -4073)

(cl:defconstant #.(lispify "UV__EINTR" 'constant) -4072)

(cl:defconstant #.(lispify "UV__EINVAL" 'constant) -4071)

(cl:defconstant #.(lispify "UV__EIO" 'constant) -4070)

(cl:defconstant #.(lispify "UV__EISCONN" 'constant) -4069)

(cl:defconstant #.(lispify "UV__EISDIR" 'constant) -4068)

(cl:defconstant #.(lispify "UV__ELOOP" 'constant) -4067)

(cl:defconstant #.(lispify "UV__EMFILE" 'constant) -4066)

(cl:defconstant #.(lispify "UV__EMSGSIZE" 'constant) -4065)

(cl:defconstant #.(lispify "UV__ENAMETOOLONG" 'constant) -4064)

(cl:defconstant #.(lispify "UV__ENETDOWN" 'constant) -4063)

(cl:defconstant #.(lispify "UV__ENETUNREACH" 'constant) -4062)

(cl:defconstant #.(lispify "UV__ENFILE" 'constant) -4061)

(cl:defconstant #.(lispify "UV__ENOBUFS" 'constant) -4060)

(cl:defconstant #.(lispify "UV__ENODEV" 'constant) -4059)

(cl:defconstant #.(lispify "UV__ENOENT" 'constant) -4058)

(cl:defconstant #.(lispify "UV__ENOMEM" 'constant) -4057)

(cl:defconstant #.(lispify "UV__ENONET" 'constant) -4056)

(cl:defconstant #.(lispify "UV__ENOSPC" 'constant) -4055)

(cl:defconstant #.(lispify "UV__ENOSYS" 'constant) -4054)

(cl:defconstant #.(lispify "UV__ENOTCONN" 'constant) -4053)

(cl:defconstant #.(lispify "UV__ENOTDIR" 'constant) -4052)

(cl:defconstant #.(lispify "UV__ENOTEMPTY" 'constant) -4051)

(cl:defconstant #.(lispify "UV__ENOTSOCK" 'constant) -4050)

(cl:defconstant #.(lispify "UV__ENOTSUP" 'constant) -4049)

(cl:defconstant #.(lispify "UV__EPERM" 'constant) -4048)

(cl:defconstant #.(lispify "UV__EPIPE" 'constant) -4047)

(cl:defconstant #.(lispify "UV__EPROTO" 'constant) -4046)

(cl:defconstant #.(lispify "UV__EPROTONOSUPPORT" 'constant) -4045)

(cl:defconstant #.(lispify "UV__EPROTOTYPE" 'constant) -4044)

(cl:defconstant #.(lispify "UV__EROFS" 'constant) -4043)

(cl:defconstant #.(lispify "UV__ESHUTDOWN" 'constant) -4042)

(cl:defconstant #.(lispify "UV__ESPIPE" 'constant) -4041)

(cl:defconstant #.(lispify "UV__ESRCH" 'constant) -4040)

(cl:defconstant #.(lispify "UV__ETIMEDOUT" 'constant) -4039)

(cl:defconstant #.(lispify "UV__ETXTBSY" 'constant) -4038)

(cl:defconstant #.(lispify "UV__EXDEV" 'constant) -4037)

(cl:defconstant #.(lispify "UV__EFBIG" 'constant) -4036)

(cl:defconstant #.(lispify "UV__ENOPROTOOPT" 'constant) -4035)

(cl:defconstant #.(lispify "UV__ERANGE" 'constant) -4034)

(cl:defconstant #.(lispify "UV__ENXIO" 'constant) -4033)

(cl:defconstant #.(lispify "UV__EMLINK" 'constant) -4032)

(cffi:defcstruct #.(lispify "uv__work" 'classname)
	(#.(lispify "work" 'slotname) :pointer)
	(#.(lispify "done" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "wq" 'slotname) :pointer))

(cl:defconstant #.(lispify "NI_MAXHOST" 'constant) 1025)

(cl:defconstant #.(lispify "NI_MAXSERV" 'constant) 32)

(cffi:defcstruct #.(lispify "uv__io_s" 'classname)
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "pending_queue" 'slotname) :pointer)
	(#.(lispify "watcher_queue" 'slotname) :pointer)
	(#.(lispify "pevents" 'slotname) :unsigned-int)
	(#.(lispify "events" 'slotname) :unsigned-int)
	(#.(lispify "fd" 'slotname) :int))

(cffi:defcstruct #.(lispify "uv__async" 'classname)
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "wfd" 'slotname) :int))

(cffi:defcstruct #.(lispify "uv_buf_t" 'classname)
	(#.(lispify "base" 'slotname) :string)
	(#.(lispify "len" 'slotname) :unsigned-long))

(cffi:defcstruct #.(lispify "uv_lib_t" 'classname)
	(#.(lispify "handle" 'slotname) :pointer)
	(#.(lispify "errmsg" 'slotname) :string))

(cffi:defcenum #.(lispify "uv_errno_t" 'enumname)
	(#.(lispify "UV_E2BIG" 'enumvalue :keyword) #.-4093)
	(#.(lispify "UV_EACCES" 'enumvalue :keyword) #.-4092)
	(#.(lispify "UV_EADDRINUSE" 'enumvalue :keyword) #.-4091)
	(#.(lispify "UV_EADDRNOTAVAIL" 'enumvalue :keyword) #.-4090)
	(#.(lispify "UV_EAFNOSUPPORT" 'enumvalue :keyword) #.-4089)
	(#.(lispify "UV_EAGAIN" 'enumvalue :keyword) #.-4088)
	(#.(lispify "UV_EAI_ADDRFAMILY" 'enumvalue :keyword) #.-3000)
	(#.(lispify "UV_EAI_AGAIN" 'enumvalue :keyword) #.-3001)
	(#.(lispify "UV_EAI_BADFLAGS" 'enumvalue :keyword) #.-3002)
	(#.(lispify "UV_EAI_BADHINTS" 'enumvalue :keyword) #.-3013)
	(#.(lispify "UV_EAI_CANCELED" 'enumvalue :keyword) #.-3003)
	(#.(lispify "UV_EAI_FAIL" 'enumvalue :keyword) #.-3004)
	(#.(lispify "UV_EAI_FAMILY" 'enumvalue :keyword) #.-3005)
	(#.(lispify "UV_EAI_MEMORY" 'enumvalue :keyword) #.-3006)
	(#.(lispify "UV_EAI_NODATA" 'enumvalue :keyword) #.-3007)
	(#.(lispify "UV_EAI_NONAME" 'enumvalue :keyword) #.-3008)
	(#.(lispify "UV_EAI_OVERFLOW" 'enumvalue :keyword) #.-3009)
	(#.(lispify "UV_EAI_PROTOCOL" 'enumvalue :keyword) #.-3014)
	(#.(lispify "UV_EAI_SERVICE" 'enumvalue :keyword) #.-3010)
	(#.(lispify "UV_EAI_SOCKTYPE" 'enumvalue :keyword) #.-3011)
	(#.(lispify "UV_EALREADY" 'enumvalue :keyword) #.-4084)
	(#.(lispify "UV_EBADF" 'enumvalue :keyword) #.-4083)
	(#.(lispify "UV_EBUSY" 'enumvalue :keyword) #.-4082)
	(#.(lispify "UV_ECANCELED" 'enumvalue :keyword) #.-4081)
	(#.(lispify "UV_ECHARSET" 'enumvalue :keyword) #.-4080)
	(#.(lispify "UV_ECONNABORTED" 'enumvalue :keyword) #.-4079)
	(#.(lispify "UV_ECONNREFUSED" 'enumvalue :keyword) #.-4078)
	(#.(lispify "UV_ECONNRESET" 'enumvalue :keyword) #.-4077)
	(#.(lispify "UV_EDESTADDRREQ" 'enumvalue :keyword) #.-4076)
	(#.(lispify "UV_EEXIST" 'enumvalue :keyword) #.-4075)
	(#.(lispify "UV_EFAULT" 'enumvalue :keyword) #.-4074)
	(#.(lispify "UV_EFBIG" 'enumvalue :keyword) #.-4036)
	(#.(lispify "UV_EHOSTUNREACH" 'enumvalue :keyword) #.-4073)
	(#.(lispify "UV_EINTR" 'enumvalue :keyword) #.-4072)
	(#.(lispify "UV_EINVAL" 'enumvalue :keyword) #.-4071)
	(#.(lispify "UV_EIO" 'enumvalue :keyword) #.-4070)
	(#.(lispify "UV_EISCONN" 'enumvalue :keyword) #.-4069)
	(#.(lispify "UV_EISDIR" 'enumvalue :keyword) #.-4068)
	(#.(lispify "UV_ELOOP" 'enumvalue :keyword) #.-4067)
	(#.(lispify "UV_EMFILE" 'enumvalue :keyword) #.-4066)
	(#.(lispify "UV_EMSGSIZE" 'enumvalue :keyword) #.-4065)
	(#.(lispify "UV_ENAMETOOLONG" 'enumvalue :keyword) #.-4064)
	(#.(lispify "UV_ENETDOWN" 'enumvalue :keyword) #.-4063)
	(#.(lispify "UV_ENETUNREACH" 'enumvalue :keyword) #.-4062)
	(#.(lispify "UV_ENFILE" 'enumvalue :keyword) #.-4061)
	(#.(lispify "UV_ENOBUFS" 'enumvalue :keyword) #.-4060)
	(#.(lispify "UV_ENODEV" 'enumvalue :keyword) #.-4059)
	(#.(lispify "UV_ENOENT" 'enumvalue :keyword) #.-4058)
	(#.(lispify "UV_ENOMEM" 'enumvalue :keyword) #.-4057)
	(#.(lispify "UV_ENONET" 'enumvalue :keyword) #.-4056)
	(#.(lispify "UV_ENOPROTOOPT" 'enumvalue :keyword) #.-4035)
	(#.(lispify "UV_ENOSPC" 'enumvalue :keyword) #.-4055)
	(#.(lispify "UV_ENOSYS" 'enumvalue :keyword) #.-4054)
	(#.(lispify "UV_ENOTCONN" 'enumvalue :keyword) #.-4053)
	(#.(lispify "UV_ENOTDIR" 'enumvalue :keyword) #.-4052)
	(#.(lispify "UV_ENOTEMPTY" 'enumvalue :keyword) #.-4051)
	(#.(lispify "UV_ENOTSOCK" 'enumvalue :keyword) #.-4050)
	(#.(lispify "UV_ENOTSUP" 'enumvalue :keyword) #.-4049)
	(#.(lispify "UV_EPERM" 'enumvalue :keyword) #.-4048)
	(#.(lispify "UV_EPIPE" 'enumvalue :keyword) #.-4047)
	(#.(lispify "UV_EPROTO" 'enumvalue :keyword) #.-4046)
	(#.(lispify "UV_EPROTONOSUPPORT" 'enumvalue :keyword) #.-4045)
	(#.(lispify "UV_EPROTOTYPE" 'enumvalue :keyword) #.-4044)
	(#.(lispify "UV_ERANGE" 'enumvalue :keyword) #.-4034)
	(#.(lispify "UV_EROFS" 'enumvalue :keyword) #.-4043)
	(#.(lispify "UV_ESHUTDOWN" 'enumvalue :keyword) #.-4042)
	(#.(lispify "UV_ESPIPE" 'enumvalue :keyword) #.-4041)
	(#.(lispify "UV_ESRCH" 'enumvalue :keyword) #.-4040)
	(#.(lispify "UV_ETIMEDOUT" 'enumvalue :keyword) #.-4039)
	(#.(lispify "UV_ETXTBSY" 'enumvalue :keyword) #.-4038)
	(#.(lispify "UV_EXDEV" 'enumvalue :keyword) #.-4037)
	(#.(lispify "UV_UNKNOWN" 'enumvalue :keyword) #.-4094)
	(#.(lispify "UV_EOF" 'enumvalue :keyword) #.-4095)
	(#.(lispify "UV_ENXIO" 'enumvalue :keyword) #.-4033)
	(#.(lispify "UV_EMLINK" 'enumvalue :keyword) #.-4032)
	(#.(lispify "UV_ERRNO_MAX" 'enumvalue :keyword) #.(cl:- 4095 1)))

(cffi:defcenum #.(lispify "uv_handle_type" 'enumname)
	(#.(lispify "UV_UNKNOWN_HANDLE" 'enumvalue :keyword) #.0)
	#.(lispify "UV_ASYNC" 'enumvalue :keyword)
	#.(lispify "UV_CHECK" 'enumvalue :keyword)
	#.(lispify "UV_FS_EVENT" 'enumvalue :keyword)
	#.(lispify "UV_FS_POLL" 'enumvalue :keyword)
	#.(lispify "UV_HANDLE" 'enumvalue :keyword)
	#.(lispify "UV_IDLE" 'enumvalue :keyword)
	#.(lispify "UV_NAMED_PIPE" 'enumvalue :keyword)
	#.(lispify "UV_POLL" 'enumvalue :keyword)
	#.(lispify "UV_PREPARE" 'enumvalue :keyword)
	#.(lispify "UV_PROCESS" 'enumvalue :keyword)
	#.(lispify "UV_STREAM" 'enumvalue :keyword)
	#.(lispify "UV_TCP" 'enumvalue :keyword)
	#.(lispify "UV_TIMER" 'enumvalue :keyword)
	#.(lispify "UV_TTY" 'enumvalue :keyword)
	#.(lispify "UV_UDP" 'enumvalue :keyword)
	#.(lispify "UV_SIGNAL" 'enumvalue :keyword)
	#.(lispify "UV_FILE" 'enumvalue :keyword)
	#.(lispify "UV_HANDLE_TYPE_MAX" 'enumvalue :keyword))

(cffi:defcenum #.(lispify "uv_req_type" 'enumname)
	(#.(lispify "UV_UNKNOWN_REQ" 'enumvalue :keyword) #.0)
	#.(lispify "UV_REQ" 'enumvalue :keyword)
	#.(lispify "UV_CONNECT" 'enumvalue :keyword)
	#.(lispify "UV_WRITE" 'enumvalue :keyword)
	#.(lispify "UV_SHUTDOWN" 'enumvalue :keyword)
	#.(lispify "UV_UDP_SEND" 'enumvalue :keyword)
	#.(lispify "UV_FS" 'enumvalue :keyword)
	#.(lispify "UV_WORK" 'enumvalue :keyword)
	#.(lispify "UV_GETADDRINFO" 'enumvalue :keyword)
	#.(lispify "UV_GETNAMEINFO" 'enumvalue :keyword)
	#.(lispify "UV_REQ_TYPE_MAX" 'enumvalue :keyword))

(cffi:defcenum #.(lispify "uv_run_mode" 'enumname)
	(#.(lispify "UV_RUN_DEFAULT" 'enumvalue :keyword) #.0)
	#.(lispify "UV_RUN_ONCE" 'enumvalue :keyword)
	#.(lispify "UV_RUN_NOWAIT" 'enumvalue :keyword))

(cffi:defcfun ("uv_version" #.(lispify "uv_version" 'function)) :unsigned-int)

(cffi:defcfun ("uv_version_string" #.(lispify "uv_version_string" 'function)) :string)

(cffi:defcfun ("uv_default_loop" #.(lispify "uv_default_loop" 'function)) :pointer)

(cffi:defcfun ("uv_loop_init" #.(lispify "uv_loop_init" 'function)) :int
  (loop :pointer))

(cffi:defcfun ("uv_loop_close" #.(lispify "uv_loop_close" 'function)) :int
  (loop :pointer))

(cffi:defcfun ("uv_loop_new" #.(lispify "uv_loop_new" 'function)) :pointer)

(cffi:defcfun ("uv_loop_delete" #.(lispify "uv_loop_delete" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("uv_loop_size" #.(lispify "uv_loop_size" 'function)) :unsigned-long)

(cffi:defcfun ("uv_run" #.(lispify "uv_run" 'function)) :int
  (arg0 :pointer)
  (mode #.(lispify "uv_run_mode" 'enumname)))

(cffi:defcfun ("uv_loop_alive" #.(lispify "uv_loop_alive" 'function)) :int
  (loop :pointer))

(cffi:defcfun ("uv_stop" #.(lispify "uv_stop" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("uv_ref" #.(lispify "uv_ref" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("uv_unref" #.(lispify "uv_unref" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("uv_has_ref" #.(lispify "uv_has_ref" 'function)) :int
  (arg0 :pointer))

(cffi:defcfun ("uv_update_time" #.(lispify "uv_update_time" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("uv_now" #.(lispify "uv_now" 'function)) :pointer
  (arg0 :pointer))

(cffi:defcfun ("uv_backend_fd" #.(lispify "uv_backend_fd" 'function)) :int
  (arg0 :pointer))

(cffi:defcfun ("uv_backend_timeout" #.(lispify "uv_backend_timeout" 'function)) :int
  (arg0 :pointer))

(cffi:defcstruct #.(lispify "uv_timespec_t" 'classname)
	(#.(lispify "tv_sec" 'slotname) :long)
	(#.(lispify "tv_nsec" 'slotname) :long))

(cffi:defcstruct #.(lispify "uv_stat_t" 'classname)
	(#.(lispify "st_dev" 'slotname) :pointer)
	(#.(lispify "st_mode" 'slotname) :pointer)
	(#.(lispify "st_nlink" 'slotname) :pointer)
	(#.(lispify "st_uid" 'slotname) :pointer)
	(#.(lispify "st_gid" 'slotname) :pointer)
	(#.(lispify "st_rdev" 'slotname) :pointer)
	(#.(lispify "st_ino" 'slotname) :pointer)
	(#.(lispify "st_size" 'slotname) :pointer)
	(#.(lispify "st_blksize" 'slotname) :pointer)
	(#.(lispify "st_blocks" 'slotname) :pointer)
	(#.(lispify "st_flags" 'slotname) :pointer)
	(#.(lispify "st_gen" 'slotname) :pointer)
	(#.(lispify "st_atim" 'slotname) #.(lispify "uv_timespec_t" 'classname))
	(#.(lispify "st_mtim" 'slotname) #.(lispify "uv_timespec_t" 'classname))
	(#.(lispify "st_ctim" 'slotname) #.(lispify "uv_timespec_t" 'classname))
	(#.(lispify "st_birthtim" 'slotname) #.(lispify "uv_timespec_t" 'classname)))

(cffi:defcenum #.(lispify "uv_membership" 'enumname)
	(#.(lispify "UV_LEAVE_GROUP" 'enumvalue :keyword) #.0)
	#.(lispify "UV_JOIN_GROUP" 'enumvalue :keyword))

(cffi:defcfun ("uv_strerror" #.(lispify "uv_strerror" 'function)) :string
  (err :int))

(cffi:defcfun ("uv_err_name" #.(lispify "uv_err_name" 'function)) :string
  (err :int))

(cffi:defcstruct #.(lispify "uv_req_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer))

(cffi:defcfun ("uv_shutdown" #.(lispify "uv_shutdown" 'function)) :int
  (req :pointer)
  (handle :pointer)
  (cb :pointer))

(cffi:defcstruct #.(lispify "uv_shutdown_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "handle" 'slotname) :pointer)
	(#.(lispify "cb" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_handle_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int))

(cffi:defcfun ("uv_handle_size" #.(lispify "uv_handle_size" 'function)) :unsigned-long
  (type #.(lispify "uv_handle_type" 'enumname)))

(cffi:defcfun ("uv_req_size" #.(lispify "uv_req_size" 'function)) :unsigned-long
  (type #.(lispify "uv_req_type" 'enumname)))

(cffi:defcfun ("uv_is_active" #.(lispify "uv_is_active" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_walk" #.(lispify "uv_walk" 'function)) :void
  (loop :pointer)
  (walk_cb :pointer)
  (arg :pointer))

(cffi:defcfun ("uv_close" #.(lispify "uv_close" 'function)) :void
  (handle :pointer)
  (close_cb :pointer))

(cffi:defcfun ("uv_recv_buffer_size" #.(lispify "uv_recv_buffer_size" 'function)) :int
  (handle :pointer)
  (value :pointer))

(cffi:defcfun ("uv_fileno" #.(lispify "uv_fileno" 'function)) :int
  (handle :pointer)
  (fd :pointer))

(cffi:defcfun ("uv_send_buffer_size" #.(lispify "uv_send_buffer_size" 'function)) :int
  (handle :pointer)
  (value :pointer))

(cffi:defcfun ("uv_buf_init" #.(lispify "uv_buf_init" 'function)) #.(lispify "uv_buf_t" 'classname)
  (base :string)
  (len :unsigned-int))

(cffi:defcstruct #.(lispify "uv_stream_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "write_queue_size" 'slotname) :unsigned-long)
	(#.(lispify "alloc_cb" 'slotname) :pointer)
	(#.(lispify "read_cb" 'slotname) :pointer)
	(#.(lispify "connect_req" 'slotname) :pointer)
	(#.(lispify "shutdown_req" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "write_queue" 'slotname) :pointer)
	(#.(lispify "write_completed_queue" 'slotname) :pointer)
	(#.(lispify "connection_cb" 'slotname) :pointer)
	(#.(lispify "delayed_error" 'slotname) :int)
	(#.(lispify "accepted_fd" 'slotname) :int)
	(#.(lispify "queued_fds" 'slotname) :pointer))

(cffi:defcfun ("uv_listen" #.(lispify "uv_listen" 'function)) :int
  (stream :pointer)
  (backlog :int)
  (cb :pointer))

(cffi:defcfun ("uv_accept" #.(lispify "uv_accept" 'function)) :int
  (server :pointer)
  (client :pointer))

(cffi:defcfun ("uv_read_start" #.(lispify "uv_read_start" 'function)) :int
  (arg0 :pointer)
  (alloc_cb :pointer)
  (read_cb :pointer))

(cffi:defcfun ("uv_read_stop" #.(lispify "uv_read_stop" 'function)) :int
  (arg0 :pointer))

(cffi:defcfun ("uv_write" #.(lispify "uv_write" 'function)) :int
  (req :pointer)
  (handle :pointer)
  (bufs :pointer)
  (nbufs :unsigned-int)
  (cb :pointer))

(cffi:defcfun ("uv_write2" #.(lispify "uv_write2" 'function)) :int
  (req :pointer)
  (handle :pointer)
  (bufs :pointer)
  (nbufs :unsigned-int)
  (send_handle :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_try_write" #.(lispify "uv_try_write" 'function)) :int
  (handle :pointer)
  (bufs :pointer)
  (nbufs :unsigned-int))

(cffi:defcstruct #.(lispify "uv_write_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "send_handle" 'slotname) :pointer)
	(#.(lispify "handle" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer)
	(#.(lispify "write_index" 'slotname) :unsigned-int)
	(#.(lispify "bufs" 'slotname) :pointer)
	(#.(lispify "nbufs" 'slotname) :unsigned-int)
	(#.(lispify "error" 'slotname) :int)
	(#.(lispify "bufsml" 'slotname) :pointer))

(cffi:defcfun ("uv_is_readable" #.(lispify "uv_is_readable" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_is_writable" #.(lispify "uv_is_writable" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_stream_set_blocking" #.(lispify "uv_stream_set_blocking" 'function)) :int
  (handle :pointer)
  (blocking :int))

(cffi:defcfun ("uv_is_closing" #.(lispify "uv_is_closing" 'function)) :int
  (handle :pointer))

(cffi:defcstruct #.(lispify "uv_tcp_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "write_queue_size" 'slotname) :unsigned-long)
	(#.(lispify "alloc_cb" 'slotname) :pointer)
	(#.(lispify "read_cb" 'slotname) :pointer)
	(#.(lispify "connect_req" 'slotname) :pointer)
	(#.(lispify "shutdown_req" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "write_queue" 'slotname) :pointer)
	(#.(lispify "write_completed_queue" 'slotname) :pointer)
	(#.(lispify "connection_cb" 'slotname) :pointer)
	(#.(lispify "delayed_error" 'slotname) :int)
	(#.(lispify "accepted_fd" 'slotname) :int)
	(#.(lispify "queued_fds" 'slotname) :pointer))

(cffi:defcfun ("uv_tcp_init" #.(lispify "uv_tcp_init" 'function)) :int
  (arg0 :pointer)
  (handle :pointer))

(cffi:defcfun ("uv_tcp_open" #.(lispify "uv_tcp_open" 'function)) :int
  (handle :pointer)
  (sock :int))

(cffi:defcfun ("uv_tcp_nodelay" #.(lispify "uv_tcp_nodelay" 'function)) :int
  (handle :pointer)
  (enable :int))

(cffi:defcfun ("uv_tcp_keepalive" #.(lispify "uv_tcp_keepalive" 'function)) :int
  (handle :pointer)
  (enable :int)
  (delay :unsigned-int))

(cffi:defcfun ("uv_tcp_simultaneous_accepts" #.(lispify "uv_tcp_simultaneous_accepts" 'function)) :int
  (handle :pointer)
  (enable :int))

(cffi:defcenum #.(lispify "uv_tcp_flags" 'enumname)
	(#.(lispify "UV_TCP_IPV6ONLY" 'enumvalue :keyword) #.1))

(cffi:defcfun ("uv_tcp_bind" #.(lispify "uv_tcp_bind" 'function)) :int
  (handle :pointer)
  (addr :pointer)
  (flags :unsigned-int))

(cffi:defcfun ("uv_tcp_getsockname" #.(lispify "uv_tcp_getsockname" 'function)) :int
  (handle :pointer)
  (name :pointer)
  (namelen :pointer))

(cffi:defcfun ("uv_tcp_getpeername" #.(lispify "uv_tcp_getpeername" 'function)) :int
  (handle :pointer)
  (name :pointer)
  (namelen :pointer))

(cffi:defcfun ("uv_tcp_connect" #.(lispify "uv_tcp_connect" 'function)) :int
  (req :pointer)
  (handle :pointer)
  (addr :pointer)
  (cb :pointer))

(cffi:defcstruct #.(lispify "uv_connect_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "handle" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer))

(cffi:defcenum #.(lispify "uv_udp_flags" 'enumname)
	(#.(lispify "UV_UDP_IPV6ONLY" 'enumvalue :keyword) #.1)
	(#.(lispify "UV_UDP_PARTIAL" 'enumvalue :keyword) #.2)
	(#.(lispify "UV_UDP_REUSEADDR" 'enumvalue :keyword) #.4))

(cffi:defcstruct #.(lispify "uv_udp_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "send_queue_size" 'slotname) :unsigned-long)
	(#.(lispify "send_queue_count" 'slotname) :unsigned-long)
	(#.(lispify "alloc_cb" 'slotname) :pointer)
	(#.(lispify "recv_cb" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "write_queue" 'slotname) :pointer)
	(#.(lispify "write_completed_queue" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_udp_send_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "handle" 'slotname) :pointer)
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer)
	(#.(lispify "addr" 'slotname) :pointer)
	(#.(lispify "nbufs" 'slotname) :unsigned-int)
	(#.(lispify "bufs" 'slotname) :pointer)
	(#.(lispify "status" 'slotname) :pointer)
	(#.(lispify "send_cb" 'slotname) :pointer)
	(#.(lispify "bufsml" 'slotname) :pointer))

(cffi:defcfun ("uv_udp_init" #.(lispify "uv_udp_init" 'function)) :int
  (arg0 :pointer)
  (handle :pointer))

(cffi:defcfun ("uv_udp_open" #.(lispify "uv_udp_open" 'function)) :int
  (handle :pointer)
  (sock :int))

(cffi:defcfun ("uv_udp_bind" #.(lispify "uv_udp_bind" 'function)) :int
  (handle :pointer)
  (addr :pointer)
  (flags :unsigned-int))

(cffi:defcfun ("uv_udp_getsockname" #.(lispify "uv_udp_getsockname" 'function)) :int
  (handle :pointer)
  (name :pointer)
  (namelen :pointer))

(cffi:defcfun ("uv_udp_set_membership" #.(lispify "uv_udp_set_membership" 'function)) :int
  (handle :pointer)
  (multicast_addr :string)
  (interface_addr :string)
  (membership #.(lispify "uv_membership" 'enumname)))

(cffi:defcfun ("uv_udp_set_multicast_loop" #.(lispify "uv_udp_set_multicast_loop" 'function)) :int
  (handle :pointer)
  (on :int))

(cffi:defcfun ("uv_udp_set_multicast_ttl" #.(lispify "uv_udp_set_multicast_ttl" 'function)) :int
  (handle :pointer)
  (ttl :int))

(cffi:defcfun ("uv_udp_set_multicast_interface" #.(lispify "uv_udp_set_multicast_interface" 'function)) :int
  (handle :pointer)
  (interface_addr :string))

(cffi:defcfun ("uv_udp_set_broadcast" #.(lispify "uv_udp_set_broadcast" 'function)) :int
  (handle :pointer)
  (on :int))

(cffi:defcfun ("uv_udp_set_ttl" #.(lispify "uv_udp_set_ttl" 'function)) :int
  (handle :pointer)
  (ttl :int))

(cffi:defcfun ("uv_udp_send" #.(lispify "uv_udp_send" 'function)) :int
  (req :pointer)
  (handle :pointer)
  (bufs :pointer)
  (nbufs :unsigned-int)
  (addr :pointer)
  (send_cb :pointer))

(cffi:defcfun ("uv_udp_try_send" #.(lispify "uv_udp_try_send" 'function)) :int
  (handle :pointer)
  (bufs :pointer)
  (nbufs :unsigned-int)
  (addr :pointer))

(cffi:defcfun ("uv_udp_recv_start" #.(lispify "uv_udp_recv_start" 'function)) :int
  (handle :pointer)
  (alloc_cb :pointer)
  (recv_cb :pointer))

(cffi:defcfun ("uv_udp_recv_stop" #.(lispify "uv_udp_recv_stop" 'function)) :int
  (handle :pointer))

(cffi:defcstruct #.(lispify "uv_tty_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "write_queue_size" 'slotname) :unsigned-long)
	(#.(lispify "alloc_cb" 'slotname) :pointer)
	(#.(lispify "read_cb" 'slotname) :pointer)
	(#.(lispify "connect_req" 'slotname) :pointer)
	(#.(lispify "shutdown_req" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "write_queue" 'slotname) :pointer)
	(#.(lispify "write_completed_queue" 'slotname) :pointer)
	(#.(lispify "connection_cb" 'slotname) :pointer)
	(#.(lispify "delayed_error" 'slotname) :int)
	(#.(lispify "accepted_fd" 'slotname) :int)
	(#.(lispify "queued_fds" 'slotname) :pointer)
	(#.(lispify "orig_termios" 'slotname) :pointer)
	(#.(lispify "mode" 'slotname) :int))

(cffi:defcfun ("uv_tty_init" #.(lispify "uv_tty_init" 'function)) :int
  (arg0 :pointer)
  (arg1 :pointer)
  (fd :int)
  (readable :int))

(cffi:defcfun ("uv_tty_set_mode" #.(lispify "uv_tty_set_mode" 'function)) :int
  (arg0 :pointer)
  (mode :int))

(cffi:defcfun ("uv_tty_reset_mode" #.(lispify "uv_tty_reset_mode" 'function)) :int)

(cffi:defcfun ("uv_tty_get_winsize" #.(lispify "uv_tty_get_winsize" 'function)) :int
  (arg0 :pointer)
  (width :pointer)
  (height :pointer))

(cffi:defcfun ("uv_guess_handle" #.(lispify "uv_guess_handle" 'function)) #.(lispify "uv_handle_type" 'enumname)
  (file :int))

(cffi:defcstruct #.(lispify "uv_pipe_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "write_queue_size" 'slotname) :unsigned-long)
	(#.(lispify "alloc_cb" 'slotname) :pointer)
	(#.(lispify "read_cb" 'slotname) :pointer)
	(#.(lispify "connect_req" 'slotname) :pointer)
	(#.(lispify "shutdown_req" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "write_queue" 'slotname) :pointer)
	(#.(lispify "write_completed_queue" 'slotname) :pointer)
	(#.(lispify "connection_cb" 'slotname) :pointer)
	(#.(lispify "delayed_error" 'slotname) :int)
	(#.(lispify "accepted_fd" 'slotname) :int)
	(#.(lispify "queued_fds" 'slotname) :pointer)
	(#.(lispify "ipc" 'slotname) :int)
	(#.(lispify "pipe_fname" 'slotname) :string))

(cffi:defcfun ("uv_pipe_init" #.(lispify "uv_pipe_init" 'function)) :int
  (arg0 :pointer)
  (handle :pointer)
  (ipc :int))

(cffi:defcfun ("uv_pipe_open" #.(lispify "uv_pipe_open" 'function)) :int
  (arg0 :pointer)
  (file :int))

(cffi:defcfun ("uv_pipe_bind" #.(lispify "uv_pipe_bind" 'function)) :int
  (handle :pointer)
  (name :string))

(cffi:defcfun ("uv_pipe_connect" #.(lispify "uv_pipe_connect" 'function)) :void
  (req :pointer)
  (handle :pointer)
  (name :string)
  (cb :pointer))

(cffi:defcfun ("uv_pipe_getsockname" #.(lispify "uv_pipe_getsockname" 'function)) :int
  (handle :pointer)
  (buf :string)
  (len :pointer))

(cffi:defcfun ("uv_pipe_pending_instances" #.(lispify "uv_pipe_pending_instances" 'function)) :void
  (handle :pointer)
  (count :int))

(cffi:defcfun ("uv_pipe_pending_count" #.(lispify "uv_pipe_pending_count" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_pipe_pending_type" #.(lispify "uv_pipe_pending_type" 'function)) #.(lispify "uv_handle_type" 'enumname)
  (handle :pointer))

(cffi:defcstruct #.(lispify "uv_poll_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "poll_cb" 'slotname) :pointer)
	(#.(lispify "io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname)))

(cffi:defcenum #.(lispify "uv_poll_event" 'enumname)
	(#.(lispify "UV_READABLE" 'enumvalue :keyword) #.1)
	(#.(lispify "UV_WRITABLE" 'enumvalue :keyword) #.2))

(cffi:defcfun ("uv_poll_init" #.(lispify "uv_poll_init" 'function)) :int
  (loop :pointer)
  (handle :pointer)
  (fd :int))

(cffi:defcfun ("uv_poll_init_socket" #.(lispify "uv_poll_init_socket" 'function)) :int
  (loop :pointer)
  (handle :pointer)
  (socket :int))

(cffi:defcfun ("uv_poll_start" #.(lispify "uv_poll_start" 'function)) :int
  (handle :pointer)
  (events :int)
  (cb :pointer))

(cffi:defcfun ("uv_poll_stop" #.(lispify "uv_poll_stop" 'function)) :int
  (handle :pointer))

(cffi:defcstruct #.(lispify "uv_prepare_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "prepare_cb" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer))

(cffi:defcfun ("uv_prepare_init" #.(lispify "uv_prepare_init" 'function)) :int
  (arg0 :pointer)
  (prepare :pointer))

(cffi:defcfun ("uv_prepare_start" #.(lispify "uv_prepare_start" 'function)) :int
  (prepare :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_prepare_stop" #.(lispify "uv_prepare_stop" 'function)) :int
  (prepare :pointer))

(cffi:defcstruct #.(lispify "uv_check_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "check_cb" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer))

(cffi:defcfun ("uv_check_init" #.(lispify "uv_check_init" 'function)) :int
  (arg0 :pointer)
  (check :pointer))

(cffi:defcfun ("uv_check_start" #.(lispify "uv_check_start" 'function)) :int
  (check :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_check_stop" #.(lispify "uv_check_stop" 'function)) :int
  (check :pointer))

(cffi:defcstruct #.(lispify "uv_idle_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "idle_cb" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer))

(cffi:defcfun ("uv_idle_init" #.(lispify "uv_idle_init" 'function)) :int
  (arg0 :pointer)
  (idle :pointer))

(cffi:defcfun ("uv_idle_start" #.(lispify "uv_idle_start" 'function)) :int
  (idle :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_idle_stop" #.(lispify "uv_idle_stop" 'function)) :int
  (idle :pointer))

(cffi:defcstruct #.(lispify "uv_async_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "async_cb" 'slotname) :pointer)
	(#.(lispify "queue" 'slotname) :pointer)
	(#.(lispify "pending" 'slotname) :int))

(cffi:defcfun ("uv_async_init" #.(lispify "uv_async_init" 'function)) :int
  (arg0 :pointer)
  (async :pointer)
  (async_cb :pointer))

(cffi:defcfun ("uv_async_send" #.(lispify "uv_async_send" 'function)) :int
  (async :pointer))

(cffi:defcstruct #.(lispify "uv_timer_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "timer_cb" 'slotname) :pointer)
	(#.(lispify "heap_node" 'slotname) :pointer)
	(#.(lispify "timeout" 'slotname) :pointer)
	(#.(lispify "repeat" 'slotname) :pointer)
	(#.(lispify "start_id" 'slotname) :pointer))

(cffi:defcfun ("uv_timer_init" #.(lispify "uv_timer_init" 'function)) :int
  (arg0 :pointer)
  (handle :pointer))

(cffi:defcfun ("uv_timer_start" #.(lispify "uv_timer_start" 'function)) :int
  (handle :pointer)
  (cb :pointer)
  (timeout :pointer)
  (repeat :pointer))

(cffi:defcfun ("uv_timer_stop" #.(lispify "uv_timer_stop" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_timer_again" #.(lispify "uv_timer_again" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_timer_set_repeat" #.(lispify "uv_timer_set_repeat" 'function)) :void
  (handle :pointer)
  (repeat :pointer))

(cffi:defcfun ("uv_timer_get_repeat" #.(lispify "uv_timer_get_repeat" 'function)) :pointer
  (handle :pointer))

(cffi:defcstruct #.(lispify "uv_getaddrinfo_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "work_req" 'slotname) #.(lispify "uv__work" 'classname))
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "hints" 'slotname) :pointer)
	(#.(lispify "hostname" 'slotname) :string)
	(#.(lispify "service" 'slotname) :string)
	(#.(lispify "res" 'slotname) :pointer)
	(#.(lispify "retcode" 'slotname) :int))

(cffi:defcfun ("uv_getaddrinfo" #.(lispify "uv_getaddrinfo" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (getaddrinfo_cb :pointer)
  (node :string)
  (service :string)
  (hints :pointer))

(cffi:defcfun ("uv_freeaddrinfo" #.(lispify "uv_freeaddrinfo" 'function)) :void
  (ai :pointer))

(cffi:defcstruct #.(lispify "uv_getnameinfo_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "work_req" 'slotname) #.(lispify "uv__work" 'classname))
	(#.(lispify "getnameinfo_cb" 'slotname) :pointer)
	(#.(lispify "storage" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :int)
	(#.(lispify "host" 'slotname) :pointer)
	(#.(lispify "service" 'slotname) :pointer)
	(#.(lispify "retcode" 'slotname) :int))

(cffi:defcfun ("uv_getnameinfo" #.(lispify "uv_getnameinfo" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (getnameinfo_cb :pointer)
  (addr :pointer)
  (flags :int))

(cffi:defcenum #.(lispify "uv_stdio_flags" 'enumname)
	(#.(lispify "UV_IGNORE" 'enumvalue :keyword) #.#x00)
	(#.(lispify "UV_CREATE_PIPE" 'enumvalue :keyword) #.#x01)
	(#.(lispify "UV_INHERIT_FD" 'enumvalue :keyword) #.#x02)
	(#.(lispify "UV_INHERIT_STREAM" 'enumvalue :keyword) #.#x04)
	(#.(lispify "UV_READABLE_PIPE" 'enumvalue :keyword) #.#x10)
	(#.(lispify "UV_WRITABLE_PIPE" 'enumvalue :keyword) #.#x20))

(cffi:defcstruct #.(lispify "uv_stdio_container_t" 'classname)
	(#.(lispify "flags" 'slotname) #.(lispify "uv_stdio_flags" 'enumname))
	(#.(lispify "data" 'slotname) :pointer))

(cffi:defcunion #.(lispify "uv_stdio_container_t_data" 'classname)
	(#.(lispify "stream" 'slotname) :pointer)
	(#.(lispify "fd" 'slotname) :int))

(cffi:defcstruct #.(lispify "uv_process_options_t" 'classname)
	(#.(lispify "exit_cb" 'slotname) :pointer)
	(#.(lispify "file" 'slotname) :string)
	(#.(lispify "args" 'slotname) :pointer)
	(#.(lispify "env" 'slotname) :pointer)
	(#.(lispify "cwd" 'slotname) :string)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "stdio_count" 'slotname) :int)
	(#.(lispify "stdio" 'slotname) :pointer)
	(#.(lispify "uid" 'slotname) :pointer)
	(#.(lispify "gid" 'slotname) :pointer))

(cffi:defcenum #.(lispify "uv_process_flags" 'enumname)
	(#.(lispify "UV_PROCESS_SETUID" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(lispify "UV_PROCESS_SETGID" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(lispify "UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(lispify "UV_PROCESS_DETACHED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(lispify "UV_PROCESS_WINDOWS_HIDE" 'enumvalue :keyword) #.(cl:ash 1 4)))

(cffi:defcstruct #.(lispify "uv_process_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "exit_cb" 'slotname) :pointer)
	(#.(lispify "pid" 'slotname) :int)
	(#.(lispify "queue" 'slotname) :pointer)
	(#.(lispify "status" 'slotname) :int))

(cffi:defcfun ("uv_spawn" #.(lispify "uv_spawn" 'function)) :int
  (loop :pointer)
  (handle :pointer)
  (options :pointer))

(cffi:defcfun ("uv_process_kill" #.(lispify "uv_process_kill" 'function)) :int
  (arg0 :pointer)
  (signum :int))

(cffi:defcfun ("uv_kill" #.(lispify "uv_kill" 'function)) :int
  (pid :int)
  (signum :int))

(cffi:defcstruct #.(lispify "uv_work_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "work_cb" 'slotname) :pointer)
	(#.(lispify "after_work_cb" 'slotname) :pointer)
	(#.(lispify "work_req" 'slotname) #.(lispify "uv__work" 'classname)))

(cffi:defcfun ("uv_queue_work" #.(lispify "uv_queue_work" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (work_cb :pointer)
  (after_work_cb :pointer))

(cffi:defcfun ("uv_cancel" #.(lispify "uv_cancel" 'function)) :int
  (req :pointer))

(cffi:defcstruct #.(lispify "uv_cpu_info_s" 'classname)
	(#.(lispify "model" 'slotname) :string)
	(#.(lispify "speed" 'slotname) :int)
	(#.(lispify "cpu_times" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_cpu_info_s_cpu_times_s" 'classname)
	(#.(lispify "user" 'slotname) :pointer)
	(#.(lispify "nice" 'slotname) :pointer)
	(#.(lispify "sys" 'slotname) :pointer)
	(#.(lispify "idle" 'slotname) :pointer)
	(#.(lispify "irq" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_interface_address_s" 'classname)
	(#.(lispify "name" 'slotname) :string)
	(#.(lispify "phys_addr" 'slotname) :pointer)
	(#.(lispify "is_internal" 'slotname) :int)
	(#.(lispify "address" 'slotname) :pointer)
	(#.(lispify "netmask" 'slotname) :pointer))

(cffi:defcunion #.(lispify "uv_interface_address_s_netmask" 'classname)
	(#.(lispify "netmask4" 'slotname) #.(lispify "sockaddr_in" 'classname))
	(#.(lispify "netmask6" 'slotname) #.(lispify "sockaddr_in6" 'classname)))

(cffi:defcunion #.(lispify "uv_interface_address_s_address" 'classname)
	(#.(lispify "address4" 'slotname) #.(lispify "sockaddr_in" 'classname))
	(#.(lispify "address6" 'slotname) #.(lispify "sockaddr_in6" 'classname)))

(cffi:defcenum #.(lispify "uv_dirent_type_t" 'enumname)
	#.(lispify "UV_DIRENT_UNKNOWN" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_FILE" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_DIR" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_LINK" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_FIFO" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_SOCKET" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_CHAR" 'enumvalue :keyword)
	#.(lispify "UV_DIRENT_BLOCK" 'enumvalue :keyword))

(cffi:defcstruct #.(lispify "uv_dirent_s" 'classname)
	(#.(lispify "name" 'slotname) :string)
	(#.(lispify "type" 'slotname) #.(lispify "uv_dirent_type_t" 'enumname)))

(cffi:defcfun ("uv_setup_args" #.(lispify "uv_setup_args" 'function)) :pointer
  (argc :int)
  (argv :pointer))

(cffi:defcfun ("uv_get_process_title" #.(lispify "uv_get_process_title" 'function)) :int
  (buffer :string)
  (size :unsigned-long))

(cffi:defcfun ("uv_set_process_title" #.(lispify "uv_set_process_title" 'function)) :int
  (title :string))

(cffi:defcfun ("uv_resident_set_memory" #.(lispify "uv_resident_set_memory" 'function)) :int
  (rss :pointer))

(cffi:defcfun ("uv_uptime" #.(lispify "uv_uptime" 'function)) :int
  (uptime :pointer))

(cffi:defcstruct #.(lispify "uv_timeval_t" 'classname)
	(#.(lispify "tv_sec" 'slotname) :long)
	(#.(lispify "tv_usec" 'slotname) :long))

(cffi:defcstruct #.(lispify "uv_rusage_t" 'classname)
	(#.(lispify "ru_utime" 'slotname) #.(lispify "uv_timeval_t" 'classname))
	(#.(lispify "ru_stime" 'slotname) #.(lispify "uv_timeval_t" 'classname))
	(#.(lispify "ru_maxrss" 'slotname) :pointer)
	(#.(lispify "ru_ixrss" 'slotname) :pointer)
	(#.(lispify "ru_idrss" 'slotname) :pointer)
	(#.(lispify "ru_isrss" 'slotname) :pointer)
	(#.(lispify "ru_minflt" 'slotname) :pointer)
	(#.(lispify "ru_majflt" 'slotname) :pointer)
	(#.(lispify "ru_nswap" 'slotname) :pointer)
	(#.(lispify "ru_inblock" 'slotname) :pointer)
	(#.(lispify "ru_oublock" 'slotname) :pointer)
	(#.(lispify "ru_msgsnd" 'slotname) :pointer)
	(#.(lispify "ru_msgrcv" 'slotname) :pointer)
	(#.(lispify "ru_nsignals" 'slotname) :pointer)
	(#.(lispify "ru_nvcsw" 'slotname) :pointer)
	(#.(lispify "ru_nivcsw" 'slotname) :pointer))

(cffi:defcfun ("uv_getrusage" #.(lispify "uv_getrusage" 'function)) :int
  (rusage :pointer))

(cffi:defcfun ("uv_cpu_info" #.(lispify "uv_cpu_info" 'function)) :int
  (cpu_infos :pointer)
  (count :pointer))

(cffi:defcfun ("uv_free_cpu_info" #.(lispify "uv_free_cpu_info" 'function)) :void
  (cpu_infos :pointer)
  (count :int))

(cffi:defcfun ("uv_interface_addresses" #.(lispify "uv_interface_addresses" 'function)) :int
  (addresses :pointer)
  (count :pointer))

(cffi:defcfun ("uv_free_interface_addresses" #.(lispify "uv_free_interface_addresses" 'function)) :void
  (addresses :pointer)
  (count :int))

(cffi:defcenum #.(lispify "uv_fs_type" 'enumname)
	(#.(lispify "UV_FS_UNKNOWN" 'enumvalue :keyword) #.-1)
	#.(lispify "UV_FS_CUSTOM" 'enumvalue :keyword)
	#.(lispify "UV_FS_OPEN" 'enumvalue :keyword)
	#.(lispify "UV_FS_CLOSE" 'enumvalue :keyword)
	#.(lispify "UV_FS_READ" 'enumvalue :keyword)
	#.(lispify "UV_FS_WRITE" 'enumvalue :keyword)
	#.(lispify "UV_FS_SENDFILE" 'enumvalue :keyword)
	#.(lispify "UV_FS_STAT" 'enumvalue :keyword)
	#.(lispify "UV_FS_LSTAT" 'enumvalue :keyword)
	#.(lispify "UV_FS_FSTAT" 'enumvalue :keyword)
	#.(lispify "UV_FS_FTRUNCATE" 'enumvalue :keyword)
	#.(lispify "UV_FS_UTIME" 'enumvalue :keyword)
	#.(lispify "UV_FS_FUTIME" 'enumvalue :keyword)
	#.(lispify "UV_FS_CHMOD" 'enumvalue :keyword)
	#.(lispify "UV_FS_FCHMOD" 'enumvalue :keyword)
	#.(lispify "UV_FS_FSYNC" 'enumvalue :keyword)
	#.(lispify "UV_FS_FDATASYNC" 'enumvalue :keyword)
	#.(lispify "UV_FS_UNLINK" 'enumvalue :keyword)
	#.(lispify "UV_FS_RMDIR" 'enumvalue :keyword)
	#.(lispify "UV_FS_MKDIR" 'enumvalue :keyword)
	#.(lispify "UV_FS_MKDTEMP" 'enumvalue :keyword)
	#.(lispify "UV_FS_RENAME" 'enumvalue :keyword)
	#.(lispify "UV_FS_READDIR" 'enumvalue :keyword)
	#.(lispify "UV_FS_LINK" 'enumvalue :keyword)
	#.(lispify "UV_FS_SYMLINK" 'enumvalue :keyword)
	#.(lispify "UV_FS_READLINK" 'enumvalue :keyword)
	#.(lispify "UV_FS_CHOWN" 'enumvalue :keyword)
	#.(lispify "UV_FS_FCHOWN" 'enumvalue :keyword))

(cffi:defcstruct #.(lispify "uv_fs_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_req_type" 'enumname))
	(#.(lispify "active_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "fs_type" 'slotname) #.(lispify "uv_fs_type" 'enumname))
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "cb" 'slotname) :pointer)
	(#.(lispify "result" 'slotname) :pointer)
	(#.(lispify "ptr" 'slotname) :pointer)
	(#.(lispify "path" 'slotname) :string)
	(#.(lispify "statbuf" 'slotname) #.(lispify "uv_stat_t" 'classname))
	(#.(lispify "new_path" 'slotname) :string)
	(#.(lispify "file" 'slotname) :int)
	(#.(lispify "flags" 'slotname) :int)
	(#.(lispify "mode" 'slotname) :pointer)
	(#.(lispify "nbufs" 'slotname) :unsigned-int)
	(#.(lispify "bufs" 'slotname) :pointer)
	(#.(lispify "off" 'slotname) :pointer)
	(#.(lispify "uid" 'slotname) :pointer)
	(#.(lispify "gid" 'slotname) :pointer)
	(#.(lispify "atime" 'slotname) :double)
	(#.(lispify "mtime" 'slotname) :double)
	(#.(lispify "work_req" 'slotname) #.(lispify "uv__work" 'classname))
	(#.(lispify "bufsml" 'slotname) :pointer))

(cffi:defcfun ("uv_fs_req_cleanup" #.(lispify "uv_fs_req_cleanup" 'function)) :void
  (req :pointer))

(cffi:defcfun ("uv_fs_close" #.(lispify "uv_fs_close" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_open" #.(lispify "uv_fs_open" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (flags :int)
  (mode :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_read" #.(lispify "uv_fs_read" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (bufs :pointer)
  (nbufs :unsigned-int)
  (offset :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_fs_unlink" #.(lispify "uv_fs_unlink" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_write" #.(lispify "uv_fs_write" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (bufs :pointer)
  (nbufs :unsigned-int)
  (offset :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_fs_mkdir" #.(lispify "uv_fs_mkdir" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (mode :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_mkdtemp" #.(lispify "uv_fs_mkdtemp" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (tpl :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_rmdir" #.(lispify "uv_fs_rmdir" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_readdir" #.(lispify "uv_fs_readdir" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (flags :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_readdir_next" #.(lispify "uv_fs_readdir_next" 'function)) :int
  (req :pointer)
  (ent :pointer))

(cffi:defcfun ("uv_fs_stat" #.(lispify "uv_fs_stat" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_fstat" #.(lispify "uv_fs_fstat" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_rename" #.(lispify "uv_fs_rename" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (new_path :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_fsync" #.(lispify "uv_fs_fsync" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_fdatasync" #.(lispify "uv_fs_fdatasync" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_ftruncate" #.(lispify "uv_fs_ftruncate" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (offset :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_fs_sendfile" #.(lispify "uv_fs_sendfile" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (out_fd :int)
  (in_fd :int)
  (in_offset :pointer)
  (length :unsigned-long)
  (cb :pointer))

(cffi:defcfun ("uv_fs_chmod" #.(lispify "uv_fs_chmod" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (mode :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_utime" #.(lispify "uv_fs_utime" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (atime :double)
  (mtime :double)
  (cb :pointer))

(cffi:defcfun ("uv_fs_futime" #.(lispify "uv_fs_futime" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (atime :double)
  (mtime :double)
  (cb :pointer))

(cffi:defcfun ("uv_fs_lstat" #.(lispify "uv_fs_lstat" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_link" #.(lispify "uv_fs_link" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (new_path :string)
  (cb :pointer))

(cl:defconstant #.(lispify "UV_FS_SYMLINK_DIR" 'constant) #x0001)

(cl:defconstant #.(lispify "UV_FS_SYMLINK_JUNCTION" 'constant) #x0002)

(cffi:defcfun ("uv_fs_symlink" #.(lispify "uv_fs_symlink" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (new_path :string)
  (flags :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_readlink" #.(lispify "uv_fs_readlink" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (cb :pointer))

(cffi:defcfun ("uv_fs_fchmod" #.(lispify "uv_fs_fchmod" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (mode :int)
  (cb :pointer))

(cffi:defcfun ("uv_fs_chown" #.(lispify "uv_fs_chown" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (path :string)
  (uid :pointer)
  (gid :pointer)
  (cb :pointer))

(cffi:defcfun ("uv_fs_fchown" #.(lispify "uv_fs_fchown" 'function)) :int
  (loop :pointer)
  (req :pointer)
  (file :int)
  (uid :pointer)
  (gid :pointer)
  (cb :pointer))

(cffi:defcenum #.(lispify "uv_fs_event" 'enumname)
	(#.(lispify "UV_RENAME" 'enumvalue :keyword) #.1)
	(#.(lispify "UV_CHANGE" 'enumvalue :keyword) #.2))

(cffi:defcstruct #.(lispify "uv_fs_event_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "path" 'slotname) :string)
	(#.(lispify "cb" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_fs_poll_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "poll_ctx" 'slotname) :pointer))

(cffi:defcfun ("uv_fs_poll_init" #.(lispify "uv_fs_poll_init" 'function)) :int
  (loop :pointer)
  (handle :pointer))

(cffi:defcfun ("uv_fs_poll_start" #.(lispify "uv_fs_poll_start" 'function)) :int
  (handle :pointer)
  (poll_cb :pointer)
  (path :string)
  (interval :unsigned-int))

(cffi:defcfun ("uv_fs_poll_stop" #.(lispify "uv_fs_poll_stop" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_fs_poll_getpath" #.(lispify "uv_fs_poll_getpath" 'function)) :int
  (handle :pointer)
  (buf :string)
  (len :pointer))

(cffi:defcstruct #.(lispify "uv_signal_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "loop" 'slotname) :pointer)
	(#.(lispify "type" 'slotname) #.(lispify "uv_handle_type" 'enumname))
	(#.(lispify "close_cb" 'slotname) :pointer)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "reserved" 'slotname) :pointer)
	(#.(lispify "next_closing" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) :unsigned-int)
	(#.(lispify "signal_cb" 'slotname) :pointer)
	(#.(lispify "signum" 'slotname) :int)
	(#.(lispify "caught_signals" 'slotname) :unsigned-int)
	(#.(lispify "dispatched_signals" 'slotname) :unsigned-int)
	(#.(lispify "tree_entry" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_signal_s_tree_entry_s" 'classname)
	(#.(lispify "rbe_left" 'slotname) :pointer)
	(#.(lispify "rbe_right" 'slotname) :pointer)
	(#.(lispify "rbe_parent" 'slotname) :pointer)
	(#.(lispify "rbe_color" 'slotname) :int))

(cffi:defcfun ("uv_signal_init" #.(lispify "uv_signal_init" 'function)) :int
  (loop :pointer)
  (handle :pointer))

(cffi:defcfun ("uv_signal_start" #.(lispify "uv_signal_start" 'function)) :int
  (handle :pointer)
  (signal_cb :pointer)
  (signum :int))

(cffi:defcfun ("uv_signal_stop" #.(lispify "uv_signal_stop" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_loadavg" #.(lispify "uv_loadavg" 'function)) :void
  (avg :pointer))

(cffi:defcenum #.(lispify "uv_fs_event_flags" 'enumname)
	(#.(lispify "UV_FS_EVENT_WATCH_ENTRY" 'enumvalue :keyword) #.1)
	(#.(lispify "UV_FS_EVENT_STAT" 'enumvalue :keyword) #.2)
	(#.(lispify "UV_FS_EVENT_RECURSIVE" 'enumvalue :keyword) #.4))

(cffi:defcfun ("uv_fs_event_init" #.(lispify "uv_fs_event_init" 'function)) :int
  (loop :pointer)
  (handle :pointer))

(cffi:defcfun ("uv_fs_event_start" #.(lispify "uv_fs_event_start" 'function)) :int
  (handle :pointer)
  (cb :pointer)
  (path :string)
  (flags :unsigned-int))

(cffi:defcfun ("uv_fs_event_stop" #.(lispify "uv_fs_event_stop" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_fs_event_getpath" #.(lispify "uv_fs_event_getpath" 'function)) :int
  (handle :pointer)
  (buf :string)
  (len :pointer))

(cffi:defcfun ("uv_ip4_addr" #.(lispify "uv_ip4_addr" 'function)) :int
  (ip :string)
  (port :int)
  (addr :pointer))

(cffi:defcfun ("uv_ip6_addr" #.(lispify "uv_ip6_addr" 'function)) :int
  (ip :string)
  (port :int)
  (addr :pointer))

(cffi:defcfun ("uv_ip4_name" #.(lispify "uv_ip4_name" 'function)) :int
  (src :pointer)
  (dst :string)
  (size :unsigned-long))

(cffi:defcfun ("uv_ip6_name" #.(lispify "uv_ip6_name" 'function)) :int
  (src :pointer)
  (dst :string)
  (size :unsigned-long))

(cffi:defcfun ("uv_inet_ntop" #.(lispify "uv_inet_ntop" 'function)) :int
  (af :int)
  (src :pointer)
  (dst :string)
  (size :unsigned-long))

(cffi:defcfun ("uv_inet_pton" #.(lispify "uv_inet_pton" 'function)) :int
  (af :int)
  (src :string)
  (dst :pointer))

(cffi:defcfun ("uv_exepath" #.(lispify "uv_exepath" 'function)) :int
  (buffer :string)
  (size :pointer))

(cffi:defcfun ("uv_cwd" #.(lispify "uv_cwd" 'function)) :int
  (buffer :string)
  (size :pointer))

(cffi:defcfun ("uv_chdir" #.(lispify "uv_chdir" 'function)) :int
  (dir :string))

(cffi:defcfun ("uv_get_free_memory" #.(lispify "uv_get_free_memory" 'function)) :pointer)

(cffi:defcfun ("uv_get_total_memory" #.(lispify "uv_get_total_memory" 'function)) :pointer)

(cffi:defcfun ("uv_hrtime" #.(lispify "uv_hrtime" 'function)) :pointer)

(cffi:defcfun ("uv_disable_stdio_inheritance" #.(lispify "uv_disable_stdio_inheritance" 'function)) :void)

(cffi:defcfun ("uv_dlopen" #.(lispify "uv_dlopen" 'function)) :int
  (filename :string)
  (lib :pointer))

(cffi:defcfun ("uv_dlclose" #.(lispify "uv_dlclose" 'function)) :void
  (lib :pointer))

(cffi:defcfun ("uv_dlsym" #.(lispify "uv_dlsym" 'function)) :int
  (lib :pointer)
  (name :string)
  (ptr :pointer))

(cffi:defcfun ("uv_dlerror" #.(lispify "uv_dlerror" 'function)) :string
  (lib :pointer))

(cffi:defcfun ("uv_mutex_init" #.(lispify "uv_mutex_init" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_mutex_destroy" #.(lispify "uv_mutex_destroy" 'function)) :void
  (handle :pointer))

(cffi:defcfun ("uv_mutex_lock" #.(lispify "uv_mutex_lock" 'function)) :void
  (handle :pointer))

(cffi:defcfun ("uv_mutex_trylock" #.(lispify "uv_mutex_trylock" 'function)) :int
  (handle :pointer))

(cffi:defcfun ("uv_mutex_unlock" #.(lispify "uv_mutex_unlock" 'function)) :void
  (handle :pointer))

(cffi:defcfun ("uv_rwlock_init" #.(lispify "uv_rwlock_init" 'function)) :int
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_destroy" #.(lispify "uv_rwlock_destroy" 'function)) :void
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_rdlock" #.(lispify "uv_rwlock_rdlock" 'function)) :void
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_tryrdlock" #.(lispify "uv_rwlock_tryrdlock" 'function)) :int
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_rdunlock" #.(lispify "uv_rwlock_rdunlock" 'function)) :void
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_wrlock" #.(lispify "uv_rwlock_wrlock" 'function)) :void
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_trywrlock" #.(lispify "uv_rwlock_trywrlock" 'function)) :int
  (rwlock :pointer))

(cffi:defcfun ("uv_rwlock_wrunlock" #.(lispify "uv_rwlock_wrunlock" 'function)) :void
  (rwlock :pointer))

(cffi:defcfun ("uv_sem_init" #.(lispify "uv_sem_init" 'function)) :int
  (sem :pointer)
  (value :unsigned-int))

(cffi:defcfun ("uv_sem_destroy" #.(lispify "uv_sem_destroy" 'function)) :void
  (sem :pointer))

(cffi:defcfun ("uv_sem_post" #.(lispify "uv_sem_post" 'function)) :void
  (sem :pointer))

(cffi:defcfun ("uv_sem_wait" #.(lispify "uv_sem_wait" 'function)) :void
  (sem :pointer))

(cffi:defcfun ("uv_sem_trywait" #.(lispify "uv_sem_trywait" 'function)) :int
  (sem :pointer))

(cffi:defcfun ("uv_cond_init" #.(lispify "uv_cond_init" 'function)) :int
  (cond :pointer))

(cffi:defcfun ("uv_cond_destroy" #.(lispify "uv_cond_destroy" 'function)) :void
  (cond :pointer))

(cffi:defcfun ("uv_cond_signal" #.(lispify "uv_cond_signal" 'function)) :void
  (cond :pointer))

(cffi:defcfun ("uv_cond_broadcast" #.(lispify "uv_cond_broadcast" 'function)) :void
  (cond :pointer))

(cffi:defcfun ("uv_barrier_init" #.(lispify "uv_barrier_init" 'function)) :int
  (barrier :pointer)
  (count :unsigned-int))

(cffi:defcfun ("uv_barrier_destroy" #.(lispify "uv_barrier_destroy" 'function)) :void
  (barrier :pointer))

(cffi:defcfun ("uv_barrier_wait" #.(lispify "uv_barrier_wait" 'function)) :int
  (barrier :pointer))

(cffi:defcfun ("uv_cond_wait" #.(lispify "uv_cond_wait" 'function)) :void
  (cond :pointer)
  (mutex :pointer))

(cffi:defcfun ("uv_cond_timedwait" #.(lispify "uv_cond_timedwait" 'function)) :int
  (cond :pointer)
  (mutex :pointer)
  (timeout :pointer))

(cffi:defcfun ("uv_once" #.(lispify "uv_once" 'function)) :void
  (guard :pointer)
  (callback :pointer))

(cffi:defcfun ("uv_key_create" #.(lispify "uv_key_create" 'function)) :int
  (key :pointer))

(cffi:defcfun ("uv_key_delete" #.(lispify "uv_key_delete" 'function)) :void
  (key :pointer))

(cffi:defcfun ("uv_key_get" #.(lispify "uv_key_get" 'function)) :pointer
  (key :pointer))

(cffi:defcfun ("uv_key_set" #.(lispify "uv_key_set" 'function)) :void
  (key :pointer)
  (value :pointer))

(cffi:defcfun ("uv_thread_create" #.(lispify "uv_thread_create" 'function)) :int
  (tid :pointer)
  (entry :pointer)
  (arg :pointer))

(cffi:defcfun ("uv_thread_self" #.(lispify "uv_thread_self" 'function)) :unsigned-long)

(cffi:defcfun ("uv_thread_join" #.(lispify "uv_thread_join" 'function)) :int
  (tid :pointer))

(cffi:defcunion #.(lispify "uv_any_handle" 'classname)
	(#.(lispify "async" 'slotname) #.(lispify "uv_async_s" 'classname))
	(#.(lispify "check" 'slotname) #.(lispify "uv_check_s" 'classname))
	(#.(lispify "fs_event" 'slotname) #.(lispify "uv_fs_event_s" 'classname))
	(#.(lispify "fs_poll" 'slotname) #.(lispify "uv_fs_poll_s" 'classname))
	(#.(lispify "handle" 'slotname) #.(lispify "uv_handle_s" 'classname))
	(#.(lispify "idle" 'slotname) #.(lispify "uv_idle_s" 'classname))
	(#.(lispify "pipe" 'slotname) #.(lispify "uv_pipe_s" 'classname))
	(#.(lispify "poll" 'slotname) #.(lispify "uv_poll_s" 'classname))
	(#.(lispify "prepare" 'slotname) #.(lispify "uv_prepare_s" 'classname))
	(#.(lispify "process" 'slotname) #.(lispify "uv_process_s" 'classname))
	(#.(lispify "stream" 'slotname) #.(lispify "uv_stream_s" 'classname))
	(#.(lispify "tcp" 'slotname) #.(lispify "uv_tcp_s" 'classname))
	(#.(lispify "timer" 'slotname) #.(lispify "uv_timer_s" 'classname))
	(#.(lispify "tty" 'slotname) #.(lispify "uv_tty_s" 'classname))
	(#.(lispify "udp" 'slotname) #.(lispify "uv_udp_s" 'classname))
	(#.(lispify "signal" 'slotname) #.(lispify "uv_signal_s" 'classname)))

(cffi:defcunion #.(lispify "uv_any_req" 'classname)
	(#.(lispify "req" 'slotname) #.(lispify "uv_req_s" 'classname))
	(#.(lispify "connect" 'slotname) #.(lispify "uv_connect_s" 'classname))
	(#.(lispify "write" 'slotname) #.(lispify "uv_write_s" 'classname))
	(#.(lispify "shutdown" 'slotname) #.(lispify "uv_shutdown_s" 'classname))
	(#.(lispify "udp_send" 'slotname) #.(lispify "uv_udp_send_s" 'classname))
	(#.(lispify "fs" 'slotname) #.(lispify "uv_fs_s" 'classname))
	(#.(lispify "work" 'slotname) #.(lispify "uv_work_s" 'classname))
	(#.(lispify "getaddrinfo" 'slotname) #.(lispify "uv_getaddrinfo_s" 'classname))
	(#.(lispify "getnameinfo" 'slotname) #.(lispify "uv_getnameinfo_s" 'classname)))

(cffi:defcstruct #.(lispify "uv_loop_s" 'classname)
	(#.(lispify "data" 'slotname) :pointer)
	(#.(lispify "active_handles" 'slotname) :unsigned-int)
	(#.(lispify "handle_queue" 'slotname) :pointer)
	(#.(lispify "active_reqs" 'slotname) :pointer)
	(#.(lispify "stop_flag" 'slotname) :unsigned-int)
	(#.(lispify "flags" 'slotname) :unsigned-long)
	(#.(lispify "backend_fd" 'slotname) :int)
	(#.(lispify "pending_queue" 'slotname) :pointer)
	(#.(lispify "watcher_queue" 'slotname) :pointer)
	(#.(lispify "watchers" 'slotname) :pointer)
	(#.(lispify "nwatchers" 'slotname) :unsigned-int)
	(#.(lispify "nfds" 'slotname) :unsigned-int)
	(#.(lispify "wq" 'slotname) :pointer)
	(#.(lispify "wq_mutex" 'slotname) :pointer)
	(#.(lispify "wq_async" 'slotname) #.(lispify "uv_async_s" 'classname))
	(#.(lispify "cloexec_lock" 'slotname) :pointer)
	(#.(lispify "closing_handles" 'slotname) :pointer)
	(#.(lispify "process_handles" 'slotname) :pointer)
	(#.(lispify "prepare_handles" 'slotname) :pointer)
	(#.(lispify "check_handles" 'slotname) :pointer)
	(#.(lispify "idle_handles" 'slotname) :pointer)
	(#.(lispify "async_handles" 'slotname) :pointer)
	(#.(lispify "async_watcher" 'slotname) #.(lispify "uv__async" 'classname))
	(#.(lispify "timer_counter" 'slotname) :pointer)
	(#.(lispify "time" 'slotname) :pointer)
	(#.(lispify "signal_pipefd" 'slotname) :pointer)
	(#.(lispify "signal_io_watcher" 'slotname) #.(lispify "uv__io_s" 'classname))
	(#.(lispify "child_watcher" 'slotname) #.(lispify "uv_signal_s" 'classname))
	(#.(lispify "emfile_fd" 'slotname) :int)
	(#.(lispify "timer_heap" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "uv_loop_s_timer_heap" 'classname)
	(#.(lispify "min" 'slotname) :pointer)
	(#.(lispify "nelts" 'slotname) :unsigned-int))


